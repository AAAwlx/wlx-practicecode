import numpy as np

# 定义问题的参数
海域长度_海里 = 2  # 海域的长度（南北方向）（海里）
海域宽度_海里 = 4  # 海域的宽度（东西方向）（海里）
中心点水深_米 = 110  # 海域中心点的水深（米）
海底坡度_度 = 1.5  # 海底坡度（度）
多波束换能器开角_度 = 120  # 多波束换能器的开角（度）


# 计算单个波束的覆盖宽度
def 计算覆盖宽度(开角_度, 水深):
    # 将开角从度数转换为弧度
    开角_弧度 = np.deg2rad(开角_度)
    # 使用三角函数计算覆盖宽度
    覆盖宽度 = 2 * 水深 * np.tan(开角_弧度 / 2)
    return 覆盖宽度


# 计算覆盖整个海域所需的波束数量
def 计算所需波束数(长度_海里, 宽度_海里, 覆盖宽度):
    # 将海域尺寸转换为米
    长度_米 = 长度_海里 * 1852  # 1 海里 = 1852 米
    宽度_米 = 宽度_海里 * 1852
    # 计算需要的波束数量（沿长度和宽度方向）
    波束数_长度 = int(np.ceil(长度_米 / 覆盖宽度))
    波束数_宽度 = int(np.ceil(宽度_米 / 覆盖宽度))
    return 波束数_长度, 波束数_宽度


# 计算考虑重叠的实际覆盖宽度
def 计算实际覆盖宽度(覆盖宽度, 重叠百分比):
    重叠 = 覆盖宽度 * (重叠百分比 / 100)
    实际覆盖宽度 = 覆盖宽度 + 2 * 重叠
    return 实际覆盖宽度


# 计算波束间距
def 计算波束间距(长度_海里, 波束数_长度):
    # 将长度转换为米
    长度_米 = 长度_海里 * 1852  # 1 海里 = 1852 米
    波束间距 = 长度_米 / (波束数_长度 - 1)
    return 波束间距


# 定义重叠百分比范围（10% 到 20%）
最小重叠百分比 = 10
最大重叠百分比 = 20

# 遍历在范围内的重叠百分比
for 重叠百分比 in range(最小重叠百分比, 最大重叠百分比 + 1):
    # 计算单个波束的覆盖宽度
    波束覆盖宽度 = 计算覆盖宽度(多波束换能器开角_度, 中心点水深_米)

    # 计算覆盖整个海域所需的波束数量
    所需波束数_长度, 所需波束数_宽度 = 计算所需波束数(海域长度_海里, 海域宽度_海里, 波束覆盖宽度)

    # 计算考虑重叠的实际覆盖宽度
    实际覆盖宽度 = 计算实际覆盖宽度(波束覆盖宽度, 重叠百分比)

    # 计算波束间距
    波束间距 = 计算波束间距(海域长度_海里, 所需波束数_长度)

    print(f"重叠百分比: {重叠百分比}%")
    print(f"波束数量 (长度 x 宽度): {所需波束数_长度} x {所需波束数_宽度}")
    print(f"实际覆盖宽度（考虑重叠）: {实际覆盖宽度:.2f} 米")
    print(f"波束间距: {波束间距:.2f} 米")
    print("\n")